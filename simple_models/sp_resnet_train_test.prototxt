name: "SimpleResNet"
layer{
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include{
    phase: TRAIN
  }
  transform_param{
    mean_file: "/home/odroid/caffe/examples/cifar10/mean.binaryproto"
  }
  data_param {
    source: "/home/odroid/caffe/examples/cifar10/cifar10_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}

layer{
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include{
    phase: TEST
  }
  transform_param{
    mean_file: "/home/odroid/caffe/examples/cifar10/mean.binaryproto"
  }
  data_param {
    source: "/home/odroid/caffe/examples/cifar10/cifar10_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}

layer{
  name: "Convolution1"
  type: "Convolution"
  bottom: "data"
  top: "Convolution1"
  convolution_param {
    num_output: 40
    kernel_size: 5
    stride: 1
    weight_filler{
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
    dilation: 1
  }
}

layer {
	bottom: "Convolution1"
	top: "res2b_branch2a"
	name: "res2b_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 10
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res2b_branch2a"
	top: "res2b_branch2a"
	name: "bn2b_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res2b_branch2a"
	top: "res2b_branch2a"
	name: "scale2b_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res2b_branch2a"
	top: "res2b_branch2a"
	name: "res2b_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res2b_branch2a"
	top: "res2b_branch2b"
	name: "res2b_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 10
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res2b_branch2b"
	top: "res2b_branch2b"
	name: "bn2b_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res2b_branch2b"
	top: "res2b_branch2b"
	name: "scale2b_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res2b_branch2b"
	top: "res2b_branch2b"
	name: "res2b_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res2b_branch2b"
	top: "res2b_branch2c"
	name: "res2b_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 40
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res2b_branch2c"
	top: "res2b_branch2c"
	name: "bn2b_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res2b_branch2c"
	top: "res2b_branch2c"
	name: "scale2b_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "Convolution1"
	bottom: "res2b_branch2c"
	top: "Eltwise1"
	name: "Eltwise1"
	type: "Eltwise"
}

layer {
	bottom: "Eltwise1"
	top: "Eltwise1"
	name: "res2b_relu"
	type: "ReLU"
}  

layer {
  name: "fc"
  type: "InnerProduct"
  bottom: "Eltwise1"
  top: "fc"
  inner_product_param {
    num_output: 10
    bias_term: false
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc"
  bottom: "label"
  top: "loss"
}
layer {
  name: "acc1_test"
  type: "Accuracy"
  bottom: "fc"
  bottom: "label"
  top: "acc1_test"
  include {
    phase: TEST
  }
  accuracy_param {
    top_k: 1
  }
}
 
layer {
  name: "acc1_train"
  type: "Accuracy"
  bottom: "fc"
  bottom: "label"
  top: "acc1_train"
  include {
    phase: TRAIN
  }
  accuracy_param {
    top_k: 1
  }
}
